1)
#include <stdio.h>
#include <unistd.h>

int main(){
	pid_t pid;
	
	pid = fork();

	if(pid==0){
		printf("Child process is running... %d \n", getpid());
		printf(" having parent... %d \n", getppid());
	}
	else if (pid > 0){
		printf("Parent process is running... %d \n", getpid());
		printf(" having parent... %d \n", getppid());
	} 
	else{
		printf("Error...Something went wrong");
	}
}




Q2.

#include<iostream>
#include<unistd.h>
#include<stdlib.h>
#include<sched.h>

using namespace std;

int main()
{
        int a;
        a=sched_getscheduler(getpid());
        switch(a)
        {
                case SCHED_OTHER:cout<<"another scheduling poly"<<endl;
                break;
                case SCHED_RR:cout<<"round robin scheduler"<<endl;
                break;
                case SCHED_FIFO:cout<<"first in first out"<<endl;
                break;

        }
return 0;
}




Q3.

#include<iostream>
#include<unistd.h>
#include<sched.h>
using namespace std;
int main()
{
        int a;
        a=sched_setscheduler(getpid(),SCHED_FIFO,0);

        if(a==0)
        {
                cout<<"priority set";
        }
        else
        {
                cout<<"priority not set";
        }
return 0;
}



